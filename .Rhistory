sigma2E <- as.numeric( VarCorr(lme.fit)[1,1])
sigma2E + sigma2i
getVarCov(lme.fit, individual=1, type="marginal") #Problem here!!!!!
getVarCov.lme(lme.fit, type="marginal")
#LMM fit #####################################################
lme.fit <- lme(yield ~ gen, random = ~ 1|env, data=dataset,
weights=varIdent(form=~1|gen),
correlation=corSymm(form=~1|env))#,
#control = list(opt = "optim"))
summary(lme.fit)
#Get environmental variances
vF <- lme.fit$modelStruct$varStruct
scalePar <- lme.fit$sigma
sdRatios <- c(1, coef(vF, unconstrained = F))
sigma2i <- (scalePar * sdRatios)^2
sigma2E <- as.numeric( VarCorr(lme.fit)[1,1])
sigma2E + sigma2i
getVarCov(lme.fit, individual=1, type="marginal") #Problem here!!!!!
getVarCov.lme(lme.fit, type="marginal")
WinterWheat$Year <- factor(WinterWheat$Year)
WinterWheat$GE <- factor(WinterWheat$Genotype:WinterWheat$Year)
WinterWheat$BE <- factor(WinterWheat$Block:WinterWheat$Year)
WinterWheat$One <- 1L
EnvVarMod <- lme(Yield ~ Genotype + BE,
random = list(Year = pdSymm(~Genotype - 1)),
data = WinterWheat,
control = list(opt = "optim"))
summary(EnvVarMod)
VarCorr(EnvVarMod)
EnvVarMod <- lme(Yield ~ Genotype,
random=list(Year = pdBlocked(list(pdIdent(~Block - 1),
pdSymm(~Genotype - 1)))),
data=WinterWheat, control = list(opt = "optim"))
EnvVarMod <- lme(Yield ~ Genotype,
random=list(Year = pdBlocked(list(pdIdent(~Block - 1),
pdSymm(~Genotype - 1)))),
data=WinterWheat)
VarCorr(EnvVarMod)
EnvVarMod <- lme(Yield ~ Genotype,
random=list(Year = pdBlocked(list(pdIdent(~Block - 1), pdSymm(~Genotype - 1)))), data=WinterWheat)
0.14397287/3
numGen <- length(levels(WinterWheat$Genotype))
envVar <- as.numeric ( VarCorr(EnvVarMod)[1:numGen,1] )
envVar
envVar <- as.numeric ( VarCorr(EnvVarMod)[4:3+numGen,1] )
envVar
numGen
VarCorr(EnvVarMod)
numGen
envVar <- as.numeric ( VarCorr(EnvVarMod)[(4:3+numGen),1] )
envVar
VarCorr(EnvVarMod)[(4:3+numGen),1]
envVar <- as.numeric ( VarCorr(EnvVarMod)[4:(3+numGen),1] )
envVar
envVar + 0.14397287/3
EnvVarMod <- lme(Yield ~ Genotype,
random=list(Year = pdBlocked(list(pdIdent(~Block - 1),
pdSymm(~Genotype - 1)))),
data=WinterWheat)
VarCorr(EnvVarMod)
numGen <- length(levels(WinterWheat$Genotype))
envVar <- as.numeric ( VarCorr(EnvVarMod)[4:(3+numGen),1] )
envVar
envVar + 0.14397287/3
getVarCov(envVarMod)
getVarCov(EnvVarMod)
getVarCov(EnvVarMod)[4:7,4:7]
getVarCov(EnvVarMod)[4:7,4:7] + + 0.14397287/3
getVarCov(EnvVarMod)[4:7,4:7]
getVarCov(EnvVarMod, type = "marginal")
getVarCov(EnvVarMod, type = "marginal", individul = 1)
getVarCov(EnvVarMod, type = "conditional")
getVarCov(EnvVarMod)[4:7,4:7]
getVarCov(EnvVarMod, type = "marginal")
#Grafico tempi di germinazione osservati e attesi
dataset <- read.csv("GermTimeNew.csv", header=T)
head(dataset)
datasetT <- subset(dataset, TypeT == "fix" & Light == "SI")
#Grafico tempi di germinazione osservati e attesi
dataset <- read.csv("GermTimeNew.csv", header=T)
head(dataset)
#Grafico tempi di germinazione osservati e attesi
dataset <- read.csv("GermTimeNew.csv", header=T)
setwd("~/Documents/_DBXAndrea/Dropbox/_Lavoro/Collaborazioni/Conyza")
#Grafico tempi di germinazione osservati e attesi
dataset <- read.csv("GermTimeNew.csv", header=T)
head(dataset)
datasetT <- subset(dataset, TypeT == "fix" & Light == "SI")
g10 <- 1/GRTg.Exb(datasetT$Temp, 10, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g20 <- 1/GRTg.Exb(datasetT$Temp, 20, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g30 <- 1/GRTg.Exb(datasetT$Temp, 30, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g40 <- 1/GRTg.Exb(datasetT$Temp, 40, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g50 <- 1/GRTg.Exb(datasetT$Temp, 50, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
par(mfrow=c(1,3))
plot(g10 ~ datasetT$X10., xlim = c(1,8), ylim = c(1,8), pch=1,
xlab = "Observed", ylab = "Expected", main = "Fluctuating temperature - L/D", cex=1.2,
cex.axis=1.2, cex.lab=1.5)
points(g20 ~ datasetT$X20., pch=2)
points(g30 ~ datasetT$X30., pch=3)
points(g40 ~ datasetT$X40., pch=4)
points(g50 ~ datasetT$X50., pch=5)
abline(a =0, b=1)
datasetT <- subset(dataset, TypeT == "alt")
g10 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 10, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g20 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 20, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g30 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 30, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g40 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 40, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g50 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 50, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
plot(g10 ~ datasetT$X10., xlim = c(1,8), ylim = c(1,8), pch=1,
xlab = "Observed", ylab = "Expected", main = "Fluctuating temperature - L/D", cex=1.2,
cex.axis=1.2, cex.lab=1.5)
points(g20 ~ datasetT$X20., pch=2)
points(g30 ~ datasetT$X30., pch=3)
points(g40 ~ datasetT$X40., pch=4)
points(g50 ~ datasetT$X50., pch=5)
abline(a =0, b=1)
datasetT <- subset(dataset, Light == "NO")
g10 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 10, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g20 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 20, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g30 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 30, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g40 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 40, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
m(list=ls())
library(drcSeedGerm)
library(lattice)
library(aomisc)
dataset <- read.csv("GRnlinLong.csv", header=T)
head(dataset)
dataset$TempF <- factor(dataset$Temp)
dataset$PercF <- factor(dataset$g)
xyplot(GR ~ Temp|PercF, data = dataset)
modGR50Ex5 <- drm(GR ~ Temp, fct=GRT.Exb(), curveid = PercF,
pmodels=list(~1, ~g, ~1, ~g),
data=dataset)
summary(modGR50Ex5)
coefs <- as.numeric( coef(modGR50Ex5) )
#Predicting the germination rate for a given g and Temp
#Constant daily temperature
GRTg.Exb <- function(Temp, g, Tb, ThetaT0, b1, k, Tc0, b2){
ThetaTg <- ThetaT0 + b1 * g
Tcg <- Tc0 + b2 * g
GRTg <- ((Temp - Tb)/ThetaTg) * ((1 - exp(k * (Temp - Tcg)))/(1 -
exp(k * (Tb - Tcg))))
return(ifelse(GRTg < 0, 0, GRTg))
}
#Predicting the germination rate for a given g and Temp
#Fluctuating daily temperature
GRTgf.Exb <- function(Temp1, Temp2, g, Tb, ThetaT0, b1, k, Tc0, b2){
ThetaTg <- ThetaT0 + b1 * g
Tcg <- Tc0 + b2 * g
GRTgd <- ((Temp1 - Tb)/ThetaTg) * ((1 - exp(k * (Temp1 - Tcg)))/(1 -
exp(k * (Tb - Tcg))))
GRTgn <- ((Temp2 - Tb)/ThetaTg) * ((1 - exp(k * (Temp2 - Tcg)))/(1 -
exp(k * (Tb - Tcg))))
GRTgd <- ifelse(GRTgd < 0, 0, GRTgd)
GRTgn <- ifelse(GRTgn < 0, 0, GRTgn)
GRTg <- 0.5 * GRTgd + 0.5 * GRTgn
return(GRTg)
}
#Predicting thermal-time to a give fraction g
TTg <- function(g, ThetaT0, b1){
ThetaT0 + b1 * g}
#Predicting the daily accumulation of thermal time, depending
#on Temp and g
TTdaily.Exb <- function(Temp, g, Tb, b1, k, Tc0, b2){
Tcg <- Tc0 + b2 * g
TTg <- (Temp - Tb) * ((1 - exp(k * (Temp - Tcg)))/(1 -
exp(k * (Tb - Tcg))))
return(ifelse(TTg < 0, 0, TTg))
}
#Predicting the daily accumulation of thermal time, depending
#on Temp and g, with fluctuating temperature
TTdailyf.Exb <- function(Temp1, Temp2, g, Tb, b1, k, Tc0, b2){
Tcg <- Tc0 + b2 * g
TTg1 <- (Temp1 - Tb) * ((1 - exp(k * (Temp1 - Tcg)))/(1 -
exp(k * (Tb - Tcg))))
TTg2 <- (Temp2 - Tb) * ((1 - exp(k * (Temp2 - Tcg)))/(1 -
exp(k * (Tb - Tcg))))
TTg1 <- ifelse(TTg1 < 0, 0, TTg1)
TTg2 <- ifelse(TTg2 < 0, 0, TTg2)
TTg <- 0.5 * TTg1 + 0.5 * TTg2
return(TTg)
}
#Grafico tempi di germinazione osservati e attesi
dataset <- read.csv("GermTimeNew.csv", header=T)
head(dataset)
datasetT <- subset(dataset, TypeT == "fix" & Light == "SI")
g10 <- 1/GRTg.Exb(datasetT$Temp, 10, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g20 <- 1/GRTg.Exb(datasetT$Temp, 20, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g30 <- 1/GRTg.Exb(datasetT$Temp, 30, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g40 <- 1/GRTg.Exb(datasetT$Temp, 40, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g50 <- 1/GRTg.Exb(datasetT$Temp, 50, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
par(mfrow=c(1,3))
plot(g10 ~ datasetT$X10., xlim = c(1,8), ylim = c(1,8), pch=1,
xlab = "Observed", ylab = "Expected", main = "Fluctuating temperature - L/D", cex=1.2,
cex.axis=1.2, cex.lab=1.5)
points(g20 ~ datasetT$X20., pch=2)
points(g30 ~ datasetT$X30., pch=3)
points(g40 ~ datasetT$X40., pch=4)
points(g50 ~ datasetT$X50., pch=5)
abline(a =0, b=1)
datasetT <- subset(dataset, TypeT == "alt")
g10 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 10, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g20 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 20, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g30 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 30, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g40 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 40, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g50 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 50, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
plot(g10 ~ datasetT$X10., xlim = c(1,8), ylim = c(1,8), pch=1,
xlab = "Observed", ylab = "Expected", main = "Fluctuating temperature - L/D", cex=1.2,
cex.axis=1.2, cex.lab=1.5)
points(g20 ~ datasetT$X20., pch=2)
points(g30 ~ datasetT$X30., pch=3)
points(g40 ~ datasetT$X40., pch=4)
points(g50 ~ datasetT$X50., pch=5)
abline(a =0, b=1)
datasetT <- subset(dataset, Light == "NO")
g10 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 10, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g20 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 20, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g30 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 30, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g40 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 40, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g50 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 50, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
plot(g10 ~ datasetT$X10., xlim = c(1,8), ylim = c(1,8), pch=1,
xlab = "Observed", ylab = "Expected", main = "Fluctuating temperature - L/D", cex=1.2,
cex.axis=1.2, cex.lab=1.5)
points(g20 ~ datasetT$X20., pch=2)
points(g30 ~ datasetT$X30., pch=3)
points(g40 ~ datasetT$X40., pch=4)
points(g50 ~ datasetT$X50., pch=5)
abline(a =0, b=1)
#PREDICTIONS ####################################################
rm(list=ls())
library(drcSeedGerm)
library(lattice)
library(aomisc)
dataset <- read.csv("GRnlinLong.csv", header=T)
head(dataset)
dataset$TempF <- factor(dataset$Temp)
dataset$PercF <- factor(dataset$g)
xyplot(GR ~ Temp|PercF, data = dataset)
modGR50Ex5 <- drm(GR ~ Temp, fct=GRT.Exb(), curveid = PercF,
pmodels=list(~1, ~g, ~1, ~g),
data=dataset)
summary(modGR50Ex5)
coefs <- as.numeric( coef(modGR50Ex5) )
#Predicting the germination rate for a given g and Temp
#Constant daily temperature
GRTg.Exb <- function(Temp, g, Tb, ThetaT0, b1, k, Tc0, b2){
ThetaTg <- ThetaT0 + b1 * g
Tcg <- Tc0 + b2 * g
GRTg <- ((Temp - Tb)/ThetaTg) * ((1 - exp(k * (Temp - Tcg)))/(1 -
exp(k * (Tb - Tcg))))
return(ifelse(GRTg < 0, 0, GRTg))
}
#Predicting the germination rate for a given g and Temp
#Fluctuating daily temperature
GRTgf.Exb <- function(Temp1, Temp2, g, Tb, ThetaT0, b1, k, Tc0, b2){
ThetaTg <- ThetaT0 + b1 * g
Tcg <- Tc0 + b2 * g
GRTgd <- ((Temp1 - Tb)/ThetaTg) * ((1 - exp(k * (Temp1 - Tcg)))/(1 -
exp(k * (Tb - Tcg))))
GRTgn <- ((Temp2 - Tb)/ThetaTg) * ((1 - exp(k * (Temp2 - Tcg)))/(1 -
exp(k * (Tb - Tcg))))
GRTgd <- ifelse(GRTgd < 0, 0, GRTgd)
GRTgn <- ifelse(GRTgn < 0, 0, GRTgn)
GRTg <- 0.5 * GRTgd + 0.5 * GRTgn
return(GRTg)
}
#Predicting thermal-time to a give fraction g
TTg <- function(g, ThetaT0, b1){
ThetaT0 + b1 * g}
#Predicting the daily accumulation of thermal time, depending
#on Temp and g
TTdaily.Exb <- function(Temp, g, Tb, b1, k, Tc0, b2){
Tcg <- Tc0 + b2 * g
TTg <- (Temp - Tb) * ((1 - exp(k * (Temp - Tcg)))/(1 -
exp(k * (Tb - Tcg))))
return(ifelse(TTg < 0, 0, TTg))
}
#Predicting the daily accumulation of thermal time, depending
#on Temp and g, with fluctuating temperature
TTdailyf.Exb <- function(Temp1, Temp2, g, Tb, b1, k, Tc0, b2){
Tcg <- Tc0 + b2 * g
TTg1 <- (Temp1 - Tb) * ((1 - exp(k * (Temp1 - Tcg)))/(1 -
exp(k * (Tb - Tcg))))
TTg2 <- (Temp2 - Tb) * ((1 - exp(k * (Temp2 - Tcg)))/(1 -
exp(k * (Tb - Tcg))))
TTg1 <- ifelse(TTg1 < 0, 0, TTg1)
TTg2 <- ifelse(TTg2 < 0, 0, TTg2)
TTg <- 0.5 * TTg1 + 0.5 * TTg2
return(TTg)
}
#Grafico tempi di germinazione osservati e attesi
dataset <- read.csv("GermTimeNew.csv", header=T)
head(dataset)
datasetT <- subset(dataset, TypeT == "fix" & Light == "SI")
g10 <- 1/GRTg.Exb(datasetT$Temp, 10, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g20 <- 1/GRTg.Exb(datasetT$Temp, 20, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g30 <- 1/GRTg.Exb(datasetT$Temp, 30, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g40 <- 1/GRTg.Exb(datasetT$Temp, 40, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g50 <- 1/GRTg.Exb(datasetT$Temp, 50, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
par(mfrow=c(1,3))
plot(g10 ~ datasetT$X10., xlim = c(1,8), ylim = c(1,8), pch=1,
xlab = "Observed", ylab = "Expected", main = "Constant temperature - L/D", cex=1.2,
cex.axis=1.2, cex.lab=1.5)
points(g20 ~ datasetT$X20., pch=2)
points(g30 ~ datasetT$X30., pch=3)
points(g40 ~ datasetT$X40., pch=4)
points(g50 ~ datasetT$X50., pch=5)
abline(a =0, b=1)
datasetT <- subset(dataset, TypeT == "alt")
g10 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 10, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g20 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 20, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g30 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 30, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g40 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 40, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g50 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 50, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
plot(g10 ~ datasetT$X10., xlim = c(1,8), ylim = c(1,8), pch=1,
xlab = "Observed", ylab = "Expected", main = "Fluctuating temperature - L/D", cex=1.2,
cex.axis=1.2, cex.lab=1.5)
points(g20 ~ datasetT$X20., pch=2)
points(g30 ~ datasetT$X30., pch=3)
points(g40 ~ datasetT$X40., pch=4)
points(g50 ~ datasetT$X50., pch=5)
abline(a =0, b=1)
datasetT <- subset(dataset, Light == "NO")
g10 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 10, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g20 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 20, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g30 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 30, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g40 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 40, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
g50 <- 1/GRTgf.Exb(datasetT$Temp, datasetT$Temp2, 50, coefs[1], coefs[2], coefs[3], coefs[4], coefs[5], coefs[6])
plot(g10 ~ datasetT$X10., xlim = c(1,8), ylim = c(1,8), pch=1,
xlab = "Observed", ylab = "Expected", main = "Constant temperature - D", cex=1.2,
cex.axis=1.2, cex.lab=1.5)
points(g20 ~ datasetT$X20., pch=2)
points(g30 ~ datasetT$X30., pch=3)
points(g40 ~ datasetT$X40., pch=4)
points(g50 ~ datasetT$X50., pch=5)
abline(a =0, b=1)
EnvVarMod <- lme(Yield ~ Genotype,
random=list(Year = pdBlocked(list(pdIdent(~Block - 1),
pdSymm(~Genotype - 1)))),
data=WinterWheat)
model.lm <- lm(Yield ~ Genotype*Year + Year/Block,
data=WinterWheat)
rm(list=ls())
# library(devtools)
# install_github("OnofriAndreaPG/aomisc")
library(aomisc)
library(nlme)
data("WinterWheat")
WinterWheat <- WinterWheat[WinterWheat$Genotype == "COLOSSEO" | WinterWheat$Genotype == "CRESO" | WinterWheat$Genotype == "DUILIO",]
head(WinterWheat)
WinterWheat$Genotype <- factor(WinterWheat$Genotype)
WinterWheat$Block <- factor(WinterWheat$Block)
WinterWheat$Year <- factor(WinterWheat$Year)
model.lm <- lm(Yield ~ Genotype*Year + Year/Block,
data=WinterWheat)
anova(model.lm)
model.lm2 <- lm(Yield ~ Genotype + Genotype:Year + Year:Block,
data=WinterWheat)
anova(model.lm2)
model.lm2 <- lm(Yield ~ Genotype + Year:Block + Genotype:Year,
data=WinterWheat)
anova(model.lm2)
rm(list=ls())
# library(devtools)
# install_github("OnofriAndreaPG/aomisc")
library(aomisc)
library(nlme)
data("WinterWheat")
head(WinterWheat)
WinterWheat$Genotype <- factor(WinterWheat$Genotype)
WinterWheat$Block <- factor(WinterWheat$Block)
WinterWheat$Year <- factor(WinterWheat$Year)
model.lm <- lm(Yield ~ Genotype*Year + Year/Block,
data=WinterWheat)
anova(model.lm)
model.lm2 <- lm(Yield ~ Genotype + Year:Block + Genotype:Year,
data=WinterWheat)
anova(model.lm2)
model.lme <- lme(Yield ~ Genotype,
random=list(Year = pdBlocked(list(pdIdent(~1),
pdIdent(~Block - 1),
pdIdent(~Genotype - 1)))),
data=WinterWheat)
VarCorr(model.lme)
#Correlations
library(reshape)
covMat <- cov(cast(Year ~ Genotype, data = WinterWheatM, value = "Yield", fun = mean))
covMat*lower.tri(covMat, diag=T)
init <- c()
# WinterWheat$Year <- factor(WinterWheat$Year)
WinterWheat$GE <- factor(WinterWheat$Genotype:WinterWheat$Year)
WinterWheat$BE <- factor(WinterWheat$Block:WinterWheat$Year)
model.mix <- lme(Yield ~ Genotype,
random=list(Year = pdBlocked(list(pdIdent(~Block - 1),
pdIdent(~Genotype - 1)))),
data=WinterWheat)
VarCorr(model.mixB)
model.mixB <- lme(Yield ~ Genotype,
random=list(Year = pdBlocked(list(pdIdent(~Block - 1),
pdIdent(~Genotype - 1)))),
data=WinterWheat)
VarCorr(model.mixB)
model.mixC <- lme(Yield ~ Genotype,
random=list(Year = pdBlocked(list(pdIdent(~Genotype - 1),
pdIdent(~Block - 1)))),
data=WinterWheat)
VarCorr(model.mixC)
WinterWheat$One <- 1L
model.mixD <- lme(Yield ~ Genotype,
random=list(One = pdIdent(~GE - 1),
One = pdIdent(~GE - 1)),
data=WinterWheat)
VarCorr(model.mixD)
model.mixD <- lme(Yield ~ Genotype,
random=list(One = pdIdent(~GE - 1),
One = pdIdent(~BE - 1)),
data=WinterWheat)
VarCorr(model.mixD)
model.mixE <- lme(Yield ~ Genotype,
random=list(Year = pdIdent(~Genotype - 1),
Year = pdIdent(~Block - 1)),
data=WinterWheat)
VarCorr(model.mixE)
VarCorr(model.lme)
VarCorr(model.mixD)
EnvVarMod <- lme(Yield ~ Genotype,
random=list(Year = pdBlocked(list(pdIdent(~Block - 1),
pdSymm(~Genotype - 1)))),
data=WinterWheat)
model.mixB <- lme(Yield ~ Genotype,
random=list(Year = pdBlocked(list(pdIdent(~Block - 1),
pdIdent(~Genotype - 1)))),
data=WinterWheat)
VarCorr(model.mixB)
EnvVarMod <- lme(Yield ~ Genotype,
random=list(Year = pdBlocked(list(pdIdent(~Block - 1),
pdSymm(~Genotype - 1)))),
data=WinterWheat)
VarCorr(EnvVarMod)
WinterWheat <- WinterWheat[WinterWheat$Genotype == "COLOSSEO" | WinterWheat$Genotype == "CRESO" | WinterWheat$Genotype == "DUILIO",]
head(WinterWheat)
WinterWheat$Genotype <- factor(WinterWheat$Genotype)
WinterWheat$Block <- factor(WinterWheat$Block)
WinterWheat$Year <- factor(WinterWheat$Year)
model.lm <- lm(Yield ~ Genotype*Year + Year/Block,
data=WinterWheat)
anova(model.lm)
model.lm2 <- lm(Yield ~ Genotype + Year:Block + Genotype:Year,
data=WinterWheat)
anova(model.lm2)
model.lme <- lme(Yield ~ Genotype,
random=list(Year = pdBlocked(list(pdIdent(~1),
pdIdent(~Block - 1),
pdIdent(~Genotype - 1)))),
data=WinterWheat)
VarCorr(model.lme)
# WinterWheat$Year <- factor(WinterWheat$Year)
WinterWheat$GE <- factor(WinterWheat$Genotype:WinterWheat$Year)
WinterWheat$BE <- factor(WinterWheat$Block:WinterWheat$Year)
WinterWheat$One <- 1L
model.mixB <- lme(Yield ~ Genotype,
random=list(Year = pdBlocked(list(pdIdent(~Block - 1),
pdIdent(~Genotype - 1)))),
data=WinterWheat)
VarCorr(model.mixB)
model.mixC <- lme(Yield ~ Genotype,
random=list(Year = pdBlocked(list(pdIdent(~Genotype - 1),
pdIdent(~Block - 1)))),
data=WinterWheat)
VarCorr(model.mixC)
model.mixD <- lme(Yield ~ Genotype,
random=list(One = pdIdent(~GE - 1),
One = pdIdent(~BE - 1)),
data=WinterWheat)
VarCorr(model.mixD)
model.mixE <- lme(Yield ~ Genotype,
random=list(Year = pdIdent(~Genotype - 1),
Year = pdIdent(~Block - 1)),
data=WinterWheat)
VarCorr(model.mixE)
EnvVarMod <- lme(Yield ~ Genotype,
random=list(Year = pdBlocked(list(pdIdent(~Block - 1),
pdSymm(~Genotype - 1)))),
data=WinterWheat)
VarCorr(EnvVarMod)
EnvVarModB <- lme(Yield ~ Genotype,
random=list(Year = pdSymm(~Genotype - 1),
Year = pdIdent(~Block - 1)),
data=WinterWheat)
VarCorr(EnvVarModB)
numGen <- length(levels(WinterWheat$Genotype))
envVar <- as.numeric ( VarCorr(EnvVarMod)[4:(3+numGen),1] )
envVar
envVarNaive <- c(0.5264201, 0.7450292, 2.4191667)
envVarNaive - envVar
0.1242064/3 + 0.0707718/3
0.1242064/3 + 0.0707718/4
mean(envVarNaive)
envVarNaive - envVar
mean(envVarNaive - envVar
)
getVarCov(EnvVarMod, type = "marginal")
VarCorr(EnvVarModB)
envVar + 0.07077176
envVar + 0.07077176 + 0.12420641
getVarCov(EnvVarMod)[4:6,4:6]
getVarCov(EnvVarMod)[4:6,4:6] + 0.1242064/3
0.1242064/3 + 0.0707718/3
getVarCov(EnvVarMod)[4:6,4:6] + 0.1242064/3 + 0.0707718/3
getVarCov(EnvVarMod)[4:6,4:6] + 0.0707718/3
library(aomisc)
library(aomisc)
